generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  accounts  Account[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Account {
  id           String        @id @default(uuid())
  userId       String
  name         String
  balance      Float         @default(0)
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  categories   Category[]
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([userId, name])
}

model Transaction {
  id              String          @id @default(uuid())
  accountId       String
  categoryId      String?
  amount          Float
  transactionType TransactionType
  description     String?
  date            DateTime
  account         Account         @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category        Category?       @relation(fields: [categoryId], references: [id])
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model Category {
  id           String        @id @default(uuid())
  name         String
  accountId    String
  account      Account       @relation(fields: [accountId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum TransactionType {
  INCOME  @map("income")
  EXPENSE @map("expense")
}
