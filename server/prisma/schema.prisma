generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
}

model Account {
  id           String        @id @default(uuid())
  userId       String
  name         String
  balance      Float         @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  categories   Category[]
  transactions Transaction[]

  @@unique([userId, name])
}

model Transaction {
  id          String          @id @default(uuid())
  accountId   String
  categoryId  String?
  amount      Float
  type        TransactionType
  description String?
  date        DateTime        @default(now())
  createdAt   DateTime        @default(now())
  account     Account         @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category    Category?       @relation(fields: [categoryId], references: [id])
}

model Category {
  id           String        @id @default(uuid())
  userId       String
  name         String
  createdAt    DateTime      @default(now())
  accountId    String?
  Account      Account?      @relation(fields: [accountId], references: [id])
  transactions Transaction[]

  @@unique([userId, name])
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum CategoryType {
  INCOME
  EXPENSE
}
